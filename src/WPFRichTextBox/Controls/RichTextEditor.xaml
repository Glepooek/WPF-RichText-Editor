<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:asis="clr-namespace:WPFRichTextBox"
    x:Class="WPFRichTextBox.RichTextEditor"
    x:Name="uxRichTextEditor">

    <UserControl.Resources>
        <asis:ColorBrushConverter x:Key="ColorBrushConverter" />

        <Style x:Key="BaseToggleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="CommandTarget" Value="{Binding ElementName=mainRTB}" />
        </Style>

        <Style
            x:Key="BoldToggleButtonStyle"
            TargetType="{x:Type Button}"
            BasedOn="{StaticResource BaseToggleButtonStyle}">
            <Setter Property="Margin" Value="3,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <Image Source="Images/icon_bold.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
                            </Trigger>
                            <!--<Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="ItalicToggleButtonStyle"
            TargetType="{x:Type Button}"
            BasedOn="{StaticResource BaseToggleButtonStyle}">
            <Setter Property="Margin" Value="6,0,6,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <Image
                                Width="30"
                                Height="30"
                                Source="Images/icon_italic.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
                            </Trigger>
                            <!--<Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="UnderlineToggleButtonStyle"
            TargetType="{x:Type Button}"
            BasedOn="{StaticResource BaseToggleButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <Image
                                Width="30"
                                Height="30"
                                Source="Images/icon_underline.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
                            </Trigger>
                            <!--<Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="DellineToggleButtonStyle"
            TargetType="{x:Type Button}"
            BasedOn="{StaticResource BaseToggleButtonStyle}">
            <Setter Property="Margin" Value="6,0,6,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <Image
                                Width="30"
                                Height="30"
                                Source="Images/icon_delline.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
                            </Trigger>
                            <!--<Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ComboBox  -->
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="templateRoot"
                            SnapsToDevicePixels="true"
                            Background="Transparent"
                            BorderThickness="1"
                            BorderBrush="#DFE2E6"
                            CornerRadius="4">
                            <Border
                                x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                SnapsToDevicePixels="true"
                                HorizontalAlignment="Right"
                                BorderThickness="1"
                                BorderBrush="Transparent">
                                <Path
                                    x:Name="arrow"
                                    Fill="#848484"
                                    Width="8"
                                    Height="4"
                                    Stretch="Fill"
                                    Data="M173,328 L134,297 215,297 z" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M173,266 L134,297 215,297 z" />
                                <Setter Property="CornerRadius" TargetName="templateRoot" Value="4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Grid.ColumnSpan="2"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    Placement="Bottom"
                    VerticalOffset="4">
                    <Border
                        x:Name="dropDownBorder"
                        BorderBrush="#EDF0F2"
                        CornerRadius="4"
                        BorderThickness="1"
                        Background="#FFFFFF"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Width="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    TextElement.Foreground="#606972"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter
                    x:Name="contentPresenter"
                    TextElement.Foreground="#606972"
                    Margin="9,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Grid Height="40">
                            <Border
                                x:Name="Bd"
                                Background="#FFFFFF"
                                SnapsToDevicePixels="true"
                                CornerRadius="0">
                                <ContentPresenter
                                    x:Name="content"
                                    TextElement.FontSize="14"
                                    TextElement.Foreground="#0B1926"
                                    Margin="11,0"
                                    HorizontalAlignment="Left"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#F6FBFF" />
                                <Setter Property="TextElement.Foreground" TargetName="content" Value="#0092FA" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#F6FBFF" />
                                <Setter Property="TextElement.Foreground" TargetName="content" Value="#0092FA" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Width" Value="146" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Background" Value="#FFFFFF" />
            <Setter Property="BorderBrush" Value="#DFE2E6" />
            <Setter Property="Foreground" Value="#1B2639" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        </Style>

        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Grid.ColumnSpan="2"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    Placement="Bottom"
                    VerticalOffset="4">
                    <Border
                        x:Name="dropDownBorder"
                        BorderBrush="#EDF0F2"
                        CornerRadius="4"
                        BorderThickness="1"
                        Background="#FFFFFF"
                        Height="30"
                        Padding="6,0"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Width="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer
                            x:Name="DropDownScrollViewer"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    TextElement.Foreground="#606972"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />
                <Rectangle
                    x:Name="Rec"
                    Fill="{TemplateBinding SelectionBoxItem,
                                           Converter={StaticResource ColorBrushConverter}}"
                    Width="14"
                    Height="14"
                    StrokeThickness="0.5"
                    RadiusX="2"
                    RadiusY="2"
                    IsHitTestVisible="false"
                    Margin="9,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Rectangle
                            x:Name="Rec"
                            Fill="{TemplateBinding Content,
                                                   Converter={StaticResource ColorBrushConverter}}"
                            Width="14"
                            Height="14"
                            StrokeThickness="0.5"
                            RadiusX="2"
                            RadiusY="2"
                            Margin="6,0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Stroke" TargetName="Rec" Value="#B4B4B4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="Width" Value="146" />
            <Setter Property="Height" Value="32" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle1}" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  ComboBoxEnd  -->

        <Style x:Key="RichTextBoxStyle" TargetType="RichTextBox">
            <Setter Property="AcceptsTab" Value="True" />
            <Setter Property="MinHeight" Value="100" />
            <Setter Property="AcceptsTab" Value="True" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="20" />
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel
            x:Name="tools"
            Height="32"
            Margin="0,0,0,16"
            Orientation="Horizontal">
            <TextBlock
                Text="字号："
                FontSize="14"
                Foreground="#3C4752"
                VerticalAlignment="Center" />
            <ComboBox
                x:Name="FontSizeCmb"
                Style="{StaticResource ComboBoxStyle}"
                SelectedIndex="1"
                SelectionChanged="FontSizeCmb_SelectionChanged">
                <ComboBoxItem Content="小" />
                <ComboBoxItem Content="中" />
                <ComboBoxItem Content="大" />
            </ComboBox>
            <TextBlock
                Text="字体颜色："
                FontSize="14"
                Foreground="#3C4752"
                VerticalAlignment="Center"
                Margin="19,0,0,0" />
            <ComboBox
                x:Name="ColorCmb"
                Style="{StaticResource ComboBoxStyle1}"
                SelectedIndex="4"
                SelectionChanged="ColorCmb_SelectionChanged">
                <ComboBoxItem Content="#FE0000" />
                <ComboBoxItem Content="#FBC039" />
                <ComboBoxItem Content="#49D721" />
                <ComboBoxItem Content="#1A77FC" />
                <ComboBoxItem Content="#000000" />
            </ComboBox>
        </StackPanel>

        <Border
            x:Name="tools1"
            Grid.Row="1"
            Background="#F5F8FA"
            BorderBrush="#DAE1E6"
            BorderThickness="1"
            Height="32"
            CornerRadius="4,4,0,0">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Button
                    Content="B"
                    x:Name="BoldButton"
                    Style="{StaticResource BoldToggleButtonStyle}"
                    Command="EditingCommands.ToggleBold" />
                <Button
                    Content="I"
                    x:Name="ItalicButton"
                    Style="{StaticResource ItalicToggleButtonStyle}"
                    Command="EditingCommands.ToggleItalic" />
                <Button
                    Content="U"
                    x:Name="UnderlineButton"
                    Style="{StaticResource UnderlineToggleButtonStyle}"
                    Command="EditingCommands.ToggleUnderline" />
                <Button
                    Content="S"
                    x:Name="StrikethroughButton"
                    Style="{StaticResource DellineToggleButtonStyle}"
                    Click="StrikethroughButton_Click" />
            </StackPanel>
        </Border>

        <ScrollViewer Grid.Row="2">
            <RichTextBox
                x:Name="mainRTB"
                asis:RichTextBoxAssistant.BoundDocument="{Binding HtmlText, ElementName=uxRichTextEditor}"
                ContextMenu="{x:Null}"
                IsReadOnly="{Binding IsReadOnly, ElementName=uxRichTextEditor}"
                Background="{Binding Background, ElementName=uxRichTextEditor}"
                BorderBrush="{Binding BorderBrush, ElementName=uxRichTextEditor}"
                BorderThickness="{Binding BorderThickness, ElementName=uxRichTextEditor}"
                Style="{StaticResource RichTextBoxStyle}"
                TextChanged="mainRTB_TextChanged" />
        </ScrollViewer>
    </Grid>
</UserControl>
